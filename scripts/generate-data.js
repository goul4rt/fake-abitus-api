const { faker } = require('@faker-js/faker');
const fs = require('fs');
const path = require('path');

// Configurar faker para portugu√™s brasileiro
faker.locale = 'pt_BR';

// Dados espec√≠ficos de Mato Grosso
const cidadesMT = [
  'Cuiab√°', 'V√°rzea Grande', 'Rondon√≥polis', 'Sinop', 'Tangar√° da Serra',
  'C√°ceres', 'Sorriso', 'Lucas do Rio Verde', 'Primavera do Leste', 'Barra do Gar√ßas',
  'Alta Floresta', 'Ju√≠na', 'Nova Mutum', 'Campo Verde', 'Poxor√©u',
  'Diamantino', 'Nobres', 'Aren√°polis', 'Santo Ant√¥nio do Leverger', 'Chapada dos Guimar√£es'
];

const bairrosCuiaba = [
  'Centro', 'Porto', 'Coxip√≥', 'Jardim das Am√©ricas', 'Jardim Europa',
  'Jardim Universit√°rio', 'Bandeirantes', 'Santa Rosa', 'Boa Esperan√ßa',
  'Dom Aquino', 'Jardim It√°lia', 'Jardim Tropical', 'Jardim Presidente',
  'Jardim das Palmeiras', 'Jardim dos Ip√™s', 'Jardim das Flores',
  'Jardim das Ac√°cias', 'Jardim das Magn√≥lias', 'Jardim das Orqu√≠deas',
  'Jardim das Violetas', 'Jardim das Margaridas', 'Jardim das Rosas'
];

const bairrosVarzeaGrande = [
  'Centro', 'Jardim Gl√≥ria', 'Jardim Marajoara', 'Jardim Imperial',
  'Jardim das Palmeiras', 'Jardim das Flores', 'Jardim das Ac√°cias',
  'Jardim das Magn√≥lias', 'Jardim das Orqu√≠deas', 'Jardim das Violetas',
  'Jardim das Margaridas', 'Jardim das Rosas', 'Jardim das Tulipas',
  'Jardim das Beg√¥nias', 'Jardim das Azal√©ias', 'Jardim das Cam√©lias'
];

const vestimentasMasculinas = [
  'Camisa azul, cal√ßa jeans, t√™nis branco',
  'Camiseta branca, shorts azul, chinelo',
  'Terno cinza, camisa branca, sapato preto',
  'Camisa polo azul, cal√ßa khaki, sand√°lia',
  'Camisa social branca, cal√ßa preta, sapato marrom',
  'Jaqueta jeans, camiseta preta, cal√ßa jeans, t√™nis',
  'Blazer azul, camisa listrada, cal√ßa social, sapato',
  'Moletom cinza, cal√ßa de moletom, t√™nis esportivo',
  'Camisa xadrez, cal√ßa jeans, botas',
  'Camisa polo verde, cal√ßa cargo, sand√°lia esportiva'
];

const vestimentasFemininas = [
  'Vestido floral, sand√°lia marrom',
  'Blusa rosa, saia preta, salto alto',
  'Blusa verde, cal√ßa jeans, t√™nis rosa',
  'Vestido preto, salto alto vermelho',
  'Blusa branca, cal√ßa jeans azul, t√™nis branco',
  'Vestido azul, sand√°lia branca',
  'Blusa amarela, saia plissada, salto baixo',
  'Camiseta estampada, cal√ßa legging, t√™nis colorido',
  'Blusa de renda, cal√ßa jeans, salto alto',
  'Vestido longo, sand√°lia dourada'
];

const informacoesDesaparecimento = [
  '√öltima vez visto no centro da cidade',
  'Saiu de casa para ir √† escola e n√£o retornou',
  '√öltima vez vista no terminal de √¥nibus',
  'Saiu do trabalho e n√£o retornou para casa',
  '√öltima vez vista na faculdade',
  'Saiu para uma festa e n√£o retornou',
  '√öltima vez visto no shopping',
  '√öltima vez vista na universidade',
  'Saiu para comprar p√£o e n√£o retornou',
  '√öltima vez visto na pra√ßa central',
  'Saiu para visitar amigos e n√£o retornou',
  '√öltima vez vista no mercado',
  'Saiu para ir ao m√©dico e n√£o retornou',
  '√öltima vez visto na rodovi√°ria',
  'Saiu para fazer exerc√≠cios e n√£o retornou'
];

function gerarPessoa(id) {
  const sexo = faker.helpers.arrayElement(['MASCULINO', 'FEMININO']);
  const idade = faker.number.int({ min: 12, max: 80 });
  const nome = faker.person.fullName({ sex: sexo === 'MASCULINO' ? 'male' : 'female' });
  
  const cidade = faker.helpers.arrayElement(cidadesMT);
  const bairros = cidade === 'Cuiab√°' ? bairrosCuiaba : 
                  cidade === 'V√°rzea Grande' ? bairrosVarzeaGrande : 
                  [faker.location.street()];
  const bairro = faker.helpers.arrayElement(bairros);
  
  const dataDesaparecimento = faker.date.between({
    from: '2020-01-01',
    to: '2024-12-31'
  });
  
  const encontradoVivo = faker.datatype.boolean({ probability: 0.3 }); // 30% de chance de ser encontrado
  const dataLocalizacao = encontradoVivo ? 
    faker.date.between({
      from: dataDesaparecimento,
      to: '2024-12-31'
    }) : null;
  
  const vestimentas = sexo === 'MASCULINO' ? 
    faker.helpers.arrayElement(vestimentasMasculinas) :
    faker.helpers.arrayElement(vestimentasFemininas);
  
  const informacao = faker.helpers.arrayElement(informacoesDesaparecimento);
  
  // Gerar URLs de imagens realistas do Unsplash
  const genero = sexo === 'MASCULINO' ? 'men' : 'women';
  const idadeFoto = idade < 18 ? 'teenager' : idade < 30 ? 'young' : idade < 50 ? 'adult' : 'elderly';
  
  const urlFoto = faker.image.urlLoremFlickr({
    category: 'people',
    width: 300,
    height: 400
  });
  
  const urlCartaz = faker.image.urlLoremFlickr({
    category: 'people',
    width: 400,
    height: 600
  });

  return {
    id: id,
    nome: nome,
    idade: idade,
    sexo: sexo,
    urlFoto: urlFoto,
    ultimaOcorrencia: {
      ocoId: 1000 + id,
      dtDesaparecimento: dataDesaparecimento.toISOString(),
      dataLocalizacao: dataLocalizacao ? dataLocalizacao.toISOString() : undefined,
      localDesaparecimentoConcat: `${bairro}, ${cidade} - MT`,
      encontradoVivo: encontradoVivo,
      ocorrenciaEntrevDesapDTO: {
        vestimentasDesaparecido: vestimentas,
        informacao: informacao
      },
      listaCartaz: [
        {
          tipoCartaz: "PRINCIPAL",
          urlCartaz: urlCartaz
        }
      ]
    },
    vivo: true
  };
}

function gerarEstatisticas(pessoas) {
  const desaparecidas = pessoas.length;
  const encontradas = pessoas.filter(p => p.ultimaOcorrencia.encontradoVivo).length;
  
  return {
    quantPessoasDesaparecidas: desaparecidas,
    quantPessoasEncontradas: encontradas
  };
}

function gerarDados() {
  console.log('üé≤ Gerando dados realistas com Faker.js...');
  
  // Gerar 100 pessoas
  const pessoas = [];
  for (let i = 1; i <= 100; i++) {
    pessoas.push(gerarPessoa(i));
  }
  
  // Gerar estat√≠sticas baseadas nos dados
  const estatisticas = gerarEstatisticas(pessoas);
  
  // Salvar dados de pessoas
  const pessoasPath = path.join(__dirname, '../data/pessoas.js');
  const pessoasContent = `const pessoas = ${JSON.stringify(pessoas, null, 2)};\n\nmodule.exports = pessoas;`;
  
  fs.writeFileSync(pessoasPath, pessoasContent, 'utf8');
  console.log(`‚úÖ ${pessoas.length} pessoas geradas e salvas em ${pessoasPath}`);
  
  // Salvar estat√≠sticas
  const estatisticasPath = path.join(__dirname, '../data/estatisticas.js');
  const estatisticasContent = `const estatisticas = ${JSON.stringify(estatisticas, null, 2)};\n\nmodule.exports = estatisticas;`;
  
  fs.writeFileSync(estatisticasPath, estatisticasContent, 'utf8');
  console.log(`‚úÖ Estat√≠sticas geradas e salvas em ${estatisticasPath}`);
  
  // Gerar relat√≥rio
  const relatorio = {
    totalPessoas: pessoas.length,
    masculino: pessoas.filter(p => p.sexo === 'MASCULINO').length,
    feminino: pessoas.filter(p => p.sexo === 'FEMININO').length,
    encontradas: pessoas.filter(p => p.ultimaOcorrencia.encontradoVivo).length,
    naoEncontradas: pessoas.filter(p => !p.ultimaOcorrencia.encontradoVivo).length,
    cidades: [...new Set(pessoas.map(p => p.ultimaOcorrencia.localDesaparecimentoConcat.split(', ')[1]))],
    faixaEtaria: {
      '12-18': pessoas.filter(p => p.idade >= 12 && p.idade <= 18).length,
      '19-30': pessoas.filter(p => p.idade >= 19 && p.idade <= 30).length,
      '31-50': pessoas.filter(p => p.idade >= 31 && p.idade <= 50).length,
      '51+': pessoas.filter(p => p.idade >= 51).length
    }
  };
  
  console.log('\nüìä Relat√≥rio dos dados gerados:');
  console.log(`   Total de pessoas: ${relatorio.totalPessoas}`);
  console.log(`   Masculino: ${relatorio.masculino}`);
  console.log(`   Feminino: ${relatorio.feminino}`);
  console.log(`   Encontradas: ${relatorio.encontradas}`);
  console.log(`   N√£o encontradas: ${relatorio.naoEncontradas}`);
  console.log(`   Cidades: ${relatorio.cidades.join(', ')}`);
  console.log('\n   Faixa et√°ria:');
  Object.entries(relatorio.faixaEtaria).forEach(([faixa, quantidade]) => {
    console.log(`     ${faixa}: ${quantidade} pessoas`);
  });
  
  console.log('\nüéâ Dados gerados com sucesso!');
  console.log('üí° Execute "npm run dev" para iniciar a API com os novos dados.');
}

// Executar se chamado diretamente
if (require.main === module) {
  gerarDados();
}

module.exports = { gerarDados, gerarPessoa, gerarEstatisticas };
